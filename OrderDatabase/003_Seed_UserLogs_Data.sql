-- Seed UserLog table with 20,000 records spanning last 2 years
-- This script generates realistic user activity log data for testing and development

-- Note: This is a template SQL script. The actual seeding is handled by the DataSeeder.cs
-- which generates 20,000 records with random dates spanning the last 2 years.

-- Sample data structure that will be generated by DataSeeder:
/*
INSERT INTO UserLogs (EventDate, Event, EventFlag, UserId, UserName) VALUES
('2023-09-15 10:30:00', 'MANAGER', 'AUTH', 'john.doe@gmail.com', 'john.doe'),
('2023-09-15 14:22:33', 'USER', 'ORDER', 'jane.smith@live.com', 'jane.smith'),
('2023-09-16 09:15:45', 'ADMIN', 'PRODUCT', 'bob.wilson@yahoo.com', 'bob.wilson'),
('2023-09-16 11:20:12', 'FAILED', 'PAYMENT', 'alice.brown@abacus.com', 'alice.brown'),
-- ... (19,996 more records)
*/

-- Events that will be generated:
-- - MANAGER: Manager-level activities and operations
-- - ADMIN: Administrative tasks and system management
-- - USER: Regular user activities and interactions
-- - FAILED: Failed operations or error conditions

-- Event Flags that will be used:
-- - AUTH, ORDER, PRODUCT, PAYMENT, ACCOUNT, FILE, REPORT, SYSTEM, API, SECURITY

-- User IDs: Realistic email addresses with various domains including:
-- - Consumer domains: gmail.com, live.com, yahoo.com, hotmail.com, outlook.com
-- - Business domains: abacus.com, techcorp.com, digitalworld.com, innovate.com, solutions.net
-- - Enterprise domains: businesshub.org, enterprise.co, globaltech.com, futuresoft.com, nexusgroup.com

-- User Names: 51 realistic usernames that correspond to the email addresses
-- Event Dates: Random dates within the last 2 years from current date

-- To verify the seeded data after running DataSeeder:
-- SELECT COUNT(*) FROM UserLogs;
-- SELECT MIN(EventDate), MAX(EventDate) FROM UserLogs;
-- SELECT Event, COUNT(*) as Count FROM UserLogs GROUP BY Event ORDER BY Count DESC;
-- SELECT EventFlag, COUNT(*) as Count FROM UserLogs GROUP BY EventFlag ORDER BY Count DESC;
-- SELECT DISTINCT UserId FROM UserLogs ORDER BY UserId;
