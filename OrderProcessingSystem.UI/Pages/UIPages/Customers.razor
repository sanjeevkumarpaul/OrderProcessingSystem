@page "/customers"
@using OrderProcessingSystem.Contracts.Dto
@using OrderProcessingSystem.UI.Shared.UIViewModels
@inject AutoMapper.IMapper Mapper
@inherits BaseDataPage<CustomerWithOrdersVM>
<link rel="stylesheet" href="~/css/customers.css" />

<BaseDataPage TItem="CustomerWithOrdersVM" 
              PageTitle="Customers"
              EntityName="customers"
              ShowCardsText="Show Cards"
              ShowGridText="All Customers"
              GridPageSize="10"
              CardPageSize="12"
              CardColumnClass="col-12 col-sm-6 col-md-4 col-xl-3 mb-3"
              DataLoader="@LoadCustomersAsync">
    <CardTemplate Context="customer">
        <div class="card p-3" style="max-width:100%; word-break:break-word;">
            <h5 class="text-truncate">@customer.Name</h5>
            <p class="small text-muted">Orders: @customer.OrdersCount</p>
            <p class="small">Sales Total: <strong>@customer.TotalSales.ToTwoDecimals(true)</strong></p>
        </div>
    </CardTemplate>
</BaseDataPage>

@code {
    // Data loader function for customers - now maps DTOs to ViewModels
    private async Task<List<CustomerWithOrdersVM>?> LoadCustomersAsync()
    {
        var customerDtos = await ApiDataService.GetCustomersWithOrdersAsync();
        return customerDtos != null ? Mapper.Map<List<CustomerWithOrdersVM>>(customerDtos) : null;
    }
}
